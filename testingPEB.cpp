/*
	Trying to mess around with the PEB
  Goal is to walk the PEB to see the loaded modules and use them
  Still working on code :(

*/

#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <winternl.h>


typedef NTSTATUS(* NT_QUERY_INFO) (
    IN HANDLE           ProcessHandle,
    IN PROCESSINFOCLASS ProcessInformationClass,
    OUT PVOID           ProcessInformation,
    IN ULONG            ProcessInformationLength,
    OUT PULONG          ReturnLength
    );

NT_QUERY_INFO NtQueryInfo;

int main(void){

	HANDLE hProc; 
	PROCESS_BASIC_INFORMATION info_class;
	ZeroMemory(&info_class, sizeof(info_class));
	DWORD returnByte;

	HMODULE hModule = LoadLibraryA(TEXT("ntdll.dll"));
	NtQueryInfo = (NT_QUERY_INFO)GetProcAddress(hModule, "NtQueryInformationProcess");

	if (NtQueryInfo == NULL)
	{
		printf("Unable to load ntdll\n");
		return 1;

	}

	printf("Address of NtQueryInfo: 0x%-16x\n", NtQueryInfo);

	hProc = GetCurrentProcess();
	NTSTATUS stat = NtQueryInfo(hProc, ProcessBasicInformation, &info_class, sizeof(info_class), &returnByte);

	if (!NT_SUCCESS(stat))
	{
		printf("Failed to call NtQueryInformationProcess\nError Code: 0x%-16x\n", stat);
		return 1;
	}

	printf("Successfully called NtQueryInformationProcess\nPEB location: 0x%016x\n", info_class.PebBaseAddress);


	PPEB pPeb = info_class.PebBaseAddress;

	PPEB_LDR_DATA PLdr = pPeb->Ldr;

	


	PLIST_ENTRY module = &PLdr->InMemoryOrderModuleList;

	printf("InMemoryOrderModuleList: 0x%-16x\n", module);
	getchar();




	return 0;
}
